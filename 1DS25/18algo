Stack using Linked List
                                       

ALGORITHMN

Step1: Start

Step2: Declare structure
typedef struct Node {
	int data;
	struct Node* link;
} node;

node* top = NULL;

Step3: Print Menu

Step4: Declare choice and input values from user

Step5: Check if(choice!=3)
           if true proceed to step 6 else go to step 7

Step 6: switch(choice)
             case 1: call procedure
                         push()
             case 2: call procedure
                         pop()
             case 3: call procedure
                         exit()

Step 7: Stop

begin procedure push()
push() {
	int data;
	printf("\nEnter data : ");
	scanf("%d", &data);
	
	node* n = (node*)malloc(sizeof(node));
	n->data = data;
	n->link = NULL;
	
	if(top == NULL)
		top = n;
	else {
		n->link = top;
		top = n;
	}
	
	displayStack();
	
}

begin procedure pop()
pop() {
	if(top == NULL) {
		printf("\nstack empty\n");
		return;
	}
	else {
		printf("\npop element : %d\n", top->data);
		top = top->link;
	}
	
	displayStack();
}


begin procedure displayStack()
displayStack() {
	node* temp = top;
	if (temp == NULL) {
		printf("\nStack is empty\n");
		return;
	}
	printf("\nStack : \n");
	while(temp != NULL) {
		printf("%d\n", temp->data);
		
		temp = temp->link;
	}
}

