ALGORITHM

Student Mark -  Singly Linked Sorting

declare new typedef
struct Node{
	int data;
	struct Node* link;
} listNode;

create node head and assign it to NULL

display()
procedure : display contents of the singlyll
parameters : nil

1.Start
2.Create node temp and assign it to head
3.While temp != NULL
	3.1 Print temp->data
	3.2 temp = temp->link;
4.If beg == end 
	Print Empty !!
5.End

sort()
procedure : sort the nodes of the linked list
parameters : nil

1.Start
2.Create listnode *temp and assign it to head
3.Declare int swapped = 0;
4.Start do..while
	do {
		temp = head;
		swapped = 0;
		
		while(temp->link != NULL) {
			if(temp->data < temp->link->data) {
				int t = temp->data;
				temp->data = temp->link->data;
				temp->link->data = t;
				swapped = 1;
			}
			temp = temp->link;
		}
	
	}while(swapped);
5.End do..while
6.End

insert()
procedure : insert elements to the linked list
parameters : int n

1.Start
2.Create listnode *temp;
3.Start for int i=1 ; check i<=n and update i++
	3.1 create node 
		listnode* n = (listnode*)malloc(sizeof(listnode));
		scanf("%d", &n->data);
		n->link = NULL;

	3.2 Check if head==NULL
		if true head = temp = n
		else temp->link = n; and temp = n;
4.End for loop
5.End

main()

1.Start
2.Declare int n;
3.Accept value of n from user.
4.Call insert(n);
5.Call sort();
6.Call display();
7.End